<head>
<title>LangTime | Purdue-langtime-on-campus-demo</title>
<meta name="description" content="We are demonstrating the workflow of langtime to ESL learners on campus, to help them experience the difference of learning activities compared to regular classroom. ">

<script src="./lib/jquery-1.11.1.min.js"></script>
<script src="./lib/handlebars-v3.0.3.js"></script>
<script src="./lib/socket.io.js"></script>
<link rel="stylesheet" href="./materialize/css/materialize.min.css">
<script src="./materialize/js/materialize.min.js"></script>

</head>


<body class="cyan lighten-5">

  <nav class="cyan lighten-5">
    <div class="nav-wrapper">
      <a href="#!" class="brand-logo"><img src="https://s3.amazonaws.com/langtime/552cc5cb35dd945413007c5e1433873406118.gif" alt=""></a>
      <a href="#!" class="brand-logo center hide-on-med-and-down">Best-ish Spoken English Training</a>

      <a href="#" data-activates="mobile-demo" class="button-collapse"><i class="mdi-navigation-menu"></i></a>
      <ul class="right hide-on-med-and-down">
        <a class="waves-effect waves-light btn-large blue">SingUp</a>
        <a class="waves-effect waves-light btn-large green">LogIn</a> 
      </ul>
      <ul class="side-nav" id="mobile-demo">
        <li class="orange">Best-ish Spoken English Training</li>
        <li class="blue"><a href="/signup">SingUp</a></li>
        <li class="green"><a href="/login">LogIn</a></li>
      </ul>
    </div>
  </nav>

  <div class="fixed-action-btn" style="bottom: 45px; right: 24px;">
    <a class="btn-floating btn-large red">
      <i class="large mdi-editor-mode-edit"></i>
    </a>
    <ul>
      <li><a class="btn-floating red" style="transform: scaleY(0.4) scaleX(0.4) translateY(40px); opacity: 0;"><i class="large mdi-editor-insert-chart"></i></a></li>
      <li><a class="btn-floating yellow darken-1" style="transform: scaleY(0.4) scaleX(0.4) translateY(40px); opacity: 0;"><i class="large mdi-editor-format-quote"></i></a></li>
      <li><a class="btn-floating green" style="transform: scaleY(0.4) scaleX(0.4) translateY(40px); opacity: 0;"><i class="large mdi-editor-publish"></i></a></li>
      <li><a class="btn-floating blue" style="transform: scaleY(0.4) scaleX(0.4) translateY(40px); opacity: 0;"><i class="large mdi-editor-attach-file"></i></a></li>
    </ul>
  </div> 



      <div class="row">
        <div class="col s12 m10 l4">
          <div class="card ">
            <div id="holder" class="card-image waves-effect waves-block waves-light" >
              <img class="responsive-img " src="http://materializecss.com/images/sample-1.jpg">
              <span class="card-title">Click or drag|drop to upload your photos</span>
            </div>
            <input type="file" id="files" name="file" style="display:none">
            <div class="card-content">
              <div class="input-field col s12">
                <input id="imageUrl" type="url" length="200" placeholder="Paste image URL here, from facebook etc">
              </div>

              <div style="display:none" id="inputControlZone">
                <a class="waves-effect waves-light btn left" id="newCard"><i class="mdi-file-file-upload"></i></a>
                <a class="waves-effect waves-light btn"><i class="mdi-content-add-box"></i></a>
                <a class="waves-effect waves-light btn right" id="startOver"><i class="mdi-navigation-cancel"></i></a>
              </div>

            </div>
          </div>
          <div id="class"><a class="waves-effect waves-light btn">Class</a></div>

        </div>
        <div id="added" class="col s12 l8 hide-on-med-and-down"></div>
      </div>



<script id="studentCard" type="text/x-handlebars-template">
      
        <div class="col s6 m3 l3 materialboxed">
          <div class="card ">
            <div class="card-image waves-effect waves-block waves-light ">
              <img class="responsive-img " src="{{imageUrl}}">
              
            </div>
            <div class="card-content">
              <p class="activator"></p>
            </div>
          </div>
        </div>
</script>
<!-- 
√ default userId;
√ add specific userId if directed from their account. 
√ enable go to class right away from this page:! mixed for now. 
 student login, then come back to pick their card -->
<div id="pickerUserId" style="display:none"><%=userId%></div>

<script>
  userId="558066e8ce5fff41ce460e6c"
  pickerUserId=$("#pickerUserId").html();

  localStorage.userId=pickerUserId;
  var cardFrom = "";
  var imageFile;
  var reader;
  var socket = io();
  var smallestCard=Date.now();

$(document).ready(function(){
  
  var initialLoad;
  enableNewCard();


    socket.emit("sixSmallerCards",[userId,smallestCard,userId])
    // socket.emit("sixSmallerCards",[userId,smallestCard,userId])

    socket.on("sixSmallerCards"+userId,function(cards){
      displayCards(cards)
    })

  $("#class").click(function(){
    window.location.href="/class"
  })

  $(".button-collapse").sideNav();
  $('.materialboxed').materialbox();
  $("#holder").click(function(){
    $("#files").click()
  });

  socket.on("newCard"+userId,function(card){
    displayNewCards(card)
    setTimeout(newRound(),0);
  })


  $("#imageUrl").on("change",function(){
    var b=$("#imageUrl").val();
    if(b.length>=200){alert("The link you selected is too long.")}
    if(b&&b.length<=200){
      secondStepFrom("url");
    }
    $("#holder").find("img").attr("src",$("#imageUrl").val())
  })


  holder.ondragover = function () { this.className = 'hover'; return false; };
  holder.ondragend = function () { this.className = ''; return false; };
  holder.ondrop = function (e) {
    this.className = 'card-image waves-effect waves-block waves-light';
    e.preventDefault();
    var file = e.dataTransfer.files[0];
    imageFile = file;
    if(checkValid()=="invalid"){return}
    reader = new FileReader();
    reader.onload = function (event) {
      secondStepFrom("drop");
      $("#holder").find("img").attr("src",event.target.result)
    };
    reader.readAsDataURL(file);
    return false;
  };


  $("#files").on('change',function(){
    var x = document.getElementById ("files");
    var file=x.files[0];
    imageFile = file;
    if(checkValid()=="invalid"){return}
    preViewer = new FileReader();
    preViewer.onload=(function(event){
      secondStepFrom("files");
      $("#holder").find("img").attr("src",event.target.result)
    });
    preViewer.readAsDataURL(file);
  })

  $("#startOver").click(function(){
    newRound();
  })



})

// end of $(document).ready()

  function displayCards(cards){
    cards.forEach(function(ele){
      displayNewCards(ele);
    })
  }

  function displayNewCards(card){
    var cardSource   = $("#studentCard").html();
    var cardTemplate = Handlebars.compile(cardSource);
    var cardInfo  = {
      imageUrl : card.imageUrl
    };
    $('#added').prepend(cardTemplate(cardInfo));
    $('.materialboxed').materialbox();
    if(card.createdAt<smallestCard){smallestCard=card.createdAt;}
  }



function checkValid(){
  var ext = imageFile.name.split('.').pop().toLowerCase();
  if($.inArray(ext, ['gif','png','jpg','jpeg']) == -1) {
    $("#files").replaceWith('<input type="file" id="files" name="file">');
    $("#newCard").attr('disabled',"true");
    alert('invalid image type. only images please');
    return "invalid";
  }
}

function secondStepFrom(where){
  cardFrom = where;
  switch(where){
    case "drop":
      $("#files").hide();
      $("#imageUrl").hide();
      break;
    case "url":
      $("#imageUrl").hide();
      $("#files").hide();
      break;
    case "files":
      $("#imageUrl").hide();
      $("#files").hide()
      break;
  };
  $("#contentInputZone").show();
  $("#inputControlZone").show();
}


function enableNewCard(){
  $("#newCard").click(function(){
    // alert("once")
    $("#newCard").off("click")
    switch(cardFrom){
      case "url":
        imageFromUrl();
        break;
      case "drop":
        imageFromDrop_Files();
        break;
      case "files":
        imageFromDrop_Files();
        break;
    }
  })
}




function imageFromUrl(){
  cardInfo={
    userId:"558066e8ce5fff41ce460e6c",
    createdAt: Date.now(),
    imageUrl : $("#imageUrl").val(),
    keyWord0 : $("#keyWord0").val(),
    keyWord1 : $("#keyWord1").val(),
    keyWord2 : $("#keyWord2").val(),
    note0:"notes from tutor",
    note1:"notes from tutor",
    note2:"notes from tutor"
  };
  socket.emit("newCard", cardInfo);
}

function imageFromDrop_Files(evt){
  reader = new FileReader();
  reader.readAsArrayBuffer(imageFile);

  reader.onerror = errorHandler;
  reader.onloadstart = function(e) {
    console.log("onloadstart")
  }
  reader.onload=(function(evt){
    var s3Extension = imageFile.name.split('.').pop();
    var d = new Date();
    time=d.getTime();
    var key = "558066e8ce5fff41ce460e6c" + time+"."+s3Extension;
    imageData={
      body:evt.target.result,
      contentType:s3Extension,
      userId:"558066e8ce5fff41ce460e6c",
      time:time,
      key:key
    };
    cardInfo={
      userId:"558066e8ce5fff41ce460e6c",
      createdAt: Date.now(),
      imageUrl : $("#imageUrl").val(),
      keyWord0 : $("#keyWord0").val(),
      keyWord1 : $("#keyWord1").val(),
      keyWord2 : $("#keyWord2").val(),
      note0:"notes from tutor",
      note1:"notes from tutor",
      note2:"notes from tutor"
    };
    
    socket.emit('data',[imageData,cardInfo]);
  })
}

function errorHandler(evt) {
  switch(evt.target.error.code) {
    case evt.target.error.NOT_FOUND_ERR:
      alert('File Not Found!');
      break;
    case evt.target.error.NOT_READABLE_ERR:
      alert('File is not readable');
      break;
    case evt.target.error.ABORT_ERR:
      break; // noop
    default:
      alert('An error occurred reading this file.');
  };
}


function newRound(){
  enableNewCard()
  $("#imageUrl").show();
  $("#inputControlZone").hide();
  $("#holder").find("img").attr("src","http://materializecss.com/images/sample-1.jpg")
  $("#files").val('');
  $("#imageUrl").val('');
}

</script>




</body>