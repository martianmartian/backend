paypal sandbox

<script>
    var express = require('express');
    var querystring = require('querystring');
    var request = require('request');
    var colors = require('colors');

    colors.setTheme({
      silly: 'rainbow',
      input: 'grey',
      verbose: 'cyan',
      prompt: 'grey',
      info: 'green',
      data: 'grey',
      help: 'cyan',
      warn: 'yellow',
      debug: 'blue',
      error: 'red'
    });

    var app = express();
    app.use(express.bodyParser());

    app.get('/', function(req, res){
      res.end('Response will be available on console, nothing to look here!');
    });

    app.post('/', function(req, res){
        console.log('Received POST /'.bold);
        console.log(req.body);
        console.log('\n\n');

        // STEP 1: read POST data
        req.body = req.body || {};
        res.send(200, 'OK');
        res.end();

        // read the IPN message sent from PayPal and prepend 'cmd=_notify-validate'
        var postreq = 'cmd=_notify-validate';
        for (var key in req.body) {
            if (req.body.hasOwnProperty(key)) {
                var value = querystring.escape(req.body[key]);
                postreq = postreq + "&" + key + "=" + value;
            }
        }

        // Step 2: POST IPN data back to PayPal to validate
        console.log('Posting back to paypal'.bold);
        console.log(postreq);
        console.log('\n\n');
        var options = {
            url: 'https://www.sandbox.paypal.com/cgi-bin/webscr',
            method: 'POST',
            headers: {
                'Connection': 'close'
            },
            body: postreq,
            strictSSL: true,
            rejectUnauthorized: false,
            requestCert: true,
            agent: false
        };

        request(options, function callback(error, response, body) {
          if (!error && response.statusCode === 200) {

            // inspect IPN validation result and act accordingly

            if (body.substring(0, 8) === 'VERIFIED'){
                // The IPN is verified, process it
                console.log('Verified IPN!'.green);
                console.log('\n\n');

                // assign posted variables to local variables
                var item_name = req.body['item_name'];
                var item_number = req.body['item_number'];
                var payment_status = req.body['payment_status'];
                var payment_amount = req.body['mc_gross'];
                var payment_currency = req.body['mc_currency'];
                var txn_id = req.body['txn_id'];
                var receiver_email = req.body['receiver_email'];
                var payer_email = req.body['payer_email'];

                //Lets check a variable
                console.log("Checking variable".bold);
                console.log("payment_status:", payment_status)
                console.log('\n\n');

                // IPN message values depend upon the type of notification sent.
                // To loop through the &_POST array and print the NV pairs to the screen:
                console.log('Printing all key-value pairs...'.bold)
                for (var key in req.body) {
                    if (req.body.hasOwnProperty(key)) {
                        var value = req.body[key];
                        console.log(key + "=" + value);
                    }
                }

            } else if (body.substring(0, 7) === 'INVALID') {
                // IPN invalid, log for manual investigation
                console.log('Invalid IPN!'.error);
                console.log('\n\n');
            }
          }
        });

    });

    var port = 80;
    app.listen(port);
    var msg = 'Listening at http://localhost:' + port;
    console.log(msg.green.bold);

</script>

<script>

    // // read the IPN message sent from PayPal and prepend 'cmd=_notify-validate'
    // var postreq = 'cmd=_notify-validate';
    // for (var key in req.body) {
    //     if (req.body.hasOwnProperty(key)) {
    //         var value = querystring.escape(req.body[key]);
    //         postreq = postreq + "&" + key + "=" + value;
    //     }
    // }

    // // Step 2: POST IPN data back to PayPal to validate
    // Fire.child("nodePal").push('Posting back to paypal'.bold);
    // Fire.child("nodePal").push(postreq);
    // console.log('\n\n');
    
    // var options1 = {
    //     url: 'https://www.paypal.com/ipn',
    //     method: 'POST',
    //     headers: {
    //         'Connection': 'close'
    //     },
    //     body: postreq,
    //     strictSSL: true,
    //     rejectUnauthorized: false,
    //     requestCert: true,
    //     agent: false
    // };

    // request(options1, function callback(error, response, body) {
    //   Fire.child("nodePal").push("requesting")
    //   if (!error && response.statusCode === 200) {
    //     Fire.child("nodePal").push("next")
    //     // inspect IPN validation result and act accordingly

    //     if (body.substring(0, 8) === 'VERIFIED'){
    //         // The IPN is verified, process it
    //         Fire.child("nodePal").push('Verified IPN!'.green);
    //         console.log('\n\n');

    //         // assign posted variables to local variables
    //         var item_name = req.body['item_name'];
    //         var item_number = req.body['item_number'];
    //         var payment_status = req.body['payment_status'];
    //         var payment_amount = req.body['mc_gross'];
    //         var payment_currency = req.body['mc_currency'];
    //         var txn_id = req.body['txn_id'];
    //         var receiver_email = req.body['receiver_email'];
    //         var payer_email = req.body['payer_email'];

    //         //Lets check a variable
    //         Fire.child("nodePal").push("Checking variable".bold);
    //         Fire.child("nodePal").push("payment_status:", payment_status)
    //         // console.log('\n\n');

    //         // IPN message values depend upon the type of notification sent.
    //         // To loop through the &_POST array and print the NV pairs to the screen:
    //         Fire.child("nodePal").push('Printing all key-value pairs...'.bold)
    //         for (var key in req.body) {
    //             if (req.body.hasOwnProperty(key)) {
    //                 var value = req.body[key];
    //                 Fire.child("nodePal").push(key + "=" + value);
    //             }
    //         }

    //     } else if (body.substring(0, 7) === 'INVALID') {
    //         // IPN invalid, log for manual investigation
    //         Fire.child("nodePal").push('Invalid IPN!'.error);
    //         console.log('\n\n');
    //     }
    //   }
    // });

</script>